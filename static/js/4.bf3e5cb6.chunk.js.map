{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","linkWrapper","to","dialogAva","src","ava","name","Message","message","maxLengthCreator100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","textareaWrapper","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","sendMessage","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","newMessageText","compose","connect","state","dialogsPage","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,gBAAkB,iCAAiC,YAAc,+B,oBCAzOD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,UAAY,8BAA8B,aAAe,iCAAiC,YAAc,kC,oBCA9JD,EAAOC,QAAU,CAAC,QAAU,2B,6GCcbC,EAZI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,eAAC,IAAD,CAASH,UAAWC,IAAEG,YAAaC,GAAIP,EAAvC,UACE,qBAAKE,UAAWC,IAAEK,UAAWC,IAAKV,EAAMW,MACxC,8BAAMX,EAAMY,a,kBCJLC,EAHC,SAACb,GACf,OAAO,qBAAKG,UAAWC,IAAEU,QAAlB,SAA4Bd,EAAMc,W,0CCGrCC,EAAsBC,YAAiB,KAa/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXb,SAAClB,GAErB,OACA,uBAAMG,UAAWC,IAAEgB,gBAAiBC,SAAUrB,EAAMsB,aAApD,UACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACjBC,SAAU,CAACC,IAAUZ,GACrBH,KAAK,iBAAiBgB,YAAY,uBACnC,wBAAQzB,UAAWC,IAAEyB,YAArB,wBCkBUC,EAzBC,SAAC9B,GACf,IAAI+B,EAAkB/B,EAAMgC,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBV,GAAIgC,EAAEhC,GAAIS,IAAKuB,EAAEvB,KAAvBuB,EAAEhC,OAE/BiC,EAAmBnC,EAAMoC,SAASH,KAAI,SAACI,GAAD,OACxC,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAEnC,OAOtC,OAAIF,EAAMsC,OAER,gCACE,sBAAKnC,UAAWC,IAAE4B,QAAlB,UACE,qBAAK7B,UAAWC,IAAEmC,aAAlB,SAAiCR,IACjC,qBAAK5B,UAAWC,IAAEgC,SAAlB,SAA6BD,OAE/B,cAAClB,EAAD,CAAqBI,SAXR,SAACmB,GAChBxC,EAAM6B,YAAYW,EAAOC,sBAGF,cAAC,IAAD,CAAUjC,GAAI,Y,wBCE1BkC,sBACbC,aAhBoB,SAACC,GACrB,MAAO,CACLZ,QAASY,EAAMC,YAAYb,QAC3BI,SAASQ,EAAMC,YAAYT,SAC3BK,eAAgBG,EAAMC,YAAYJ,mBAGb,SAACK,GACxB,MAAO,CACLjB,YAAY,SAACY,GACXK,EAASC,YAAyBN,SAOtCO,IAFaN,CAGbZ","file":"static/js/4.bf3e5cb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3uAJF\",\"dialogsItems\":\"Dialogs_dialogsItems__X2on4\",\"active\":\"Dialogs_active__3dujJ\",\"messages\":\"Dialogs_messages__1aMA7\",\"textareaWrapper\":\"Dialogs_textareaWrapper__3dgdY\",\"sendMessage\":\"Dialogs_sendMessage__1dF_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__6Kojj\",\"dialogAva\":\"DialogItem_dialogAva__20oup\",\"dialogsItems\":\"DialogItem_dialogsItems__3eoT7\",\"linkWrapper\":\"DialogItem_linkWrapper__2GAzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3Ihgr\"};","import s from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink className={s.linkWrapper} to={path}>\r\n        <img className={s.dialogAva} src={props.ava}></img>\r\n        <div>{props.name}</div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\nexport default Message;\r\n","import React from 'react'\r\nimport s from \"../Dialogs.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\n\r\nconst maxLengthCreator100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n   return ( \r\n   <form className={s.textareaWrapper} onSubmit={props.handleSubmit}>\r\n     <Field component={Textarea} \r\n      validate={[required, maxLengthCreator100]}\r\n      name=\"newMessageText\" placeholder=\"enter your message\"/>\r\n     <button className={s.sendMessage}>Send</button>\r\n   </form>)\r\n }\r\n \r\n export const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { AddMessageFormRedux } from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} ava={d.ava} />\r\n  ));\r\n  let messagesElements = props.messages.map((m) => (\r\n    <Message message={m.message} key={m.id}/>\r\n  ));\r\n\r\n  const onSubmit = (values) => {\r\n    props.sendMessage(values.newMessageText);\r\n }  \r\n\r\n  if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n  return (\r\n    <div>\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>{dialogsElements}</div>\r\n        <div className={s.messages}>{messagesElements}</div>\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={onSubmit}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { sendMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport  { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state)=> {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages:state.dialogsPage.messages,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    sendMessage:(newMessageText) => {\r\n      dispatch(sendMessageActionCreator(newMessageText));\r\n    } \r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}